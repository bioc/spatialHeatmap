% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/matrix_hm.R
\name{matrix_hm}
\alias{matrix_hm}
\title{Matrix Heatmap}
\usage{
matrix_hm(
  geneID,
  se,
  adj.mod,
  ds,
  scale,
  col = c("yellow", "blue"),
  main = NULL,
  title.size = 10,
  cexCol = 1,
  cexRow = 1,
  angleCol = 45,
  angleRow = 45,
  sepcolor = "black",
  sep.width = 0.02,
  static = TRUE,
  margin = c(10, 10),
  arg.lis1 = list(),
  arg.lis2 = list()
)
}
\arguments{
\item{geneID}{A gene ID from the expression data matrix.}

\item{se}{A "SummarizedExperiment" object containing the processed data matrix and metadata returned by the function \code{\link{filter_data}}. In the data matrix, rows are gene IDs and columns are samples/conditions.}

\item{adj.mod}{The list of "adjacency matrix" and "module" definition retured by the function \code{\link{adj_mod}}.}

\item{ds}{The module identification sensitivity ds, either 2 or 3. See function \code{\link{adj_mod}} for details.}

\item{scale}{"row", "column", or "no", meaing scale the data matrix by row, column, or no scale.}

\item{col}{A character vector of two colours. It is used for constructing the colour scale. The default is c('yellow', 'blue').}

\item{main}{The title of the matrix heatmap.}

\item{title.size}{A numeric, the size of the title font.}

\item{cexCol}{A numeric value, the size of column names. Default is 1.}

\item{cexRow}{A numeric value, the size of row names. Default is 1.}

\item{angleCol}{The angle of column names. The default is 45.}

\item{angleRow}{The angle of row names. The default is 45.}

\item{sepcolor}{The colour of the two lines labelling the target gene. The default is "black".}

\item{sep.width}{The width of two indicator lines of the input gene.}

\item{static}{"TRUE" gives the static mode and "FALSE" interactive mode.}

\item{margin}{A vector of two numbers, specifying bottom and right margins respectively. The default is c(10, 10).}

\item{arg.lis1}{A list of additional arguments passed to the \code{\link[gplots]{heatmap.2}} function from "gplots" package. E.g. list(xlab='sample', ylab='gene'). The default is an empty list.}

\item{arg.lis2}{A list of additional arguments passed to the \code{\link[ggplot2]{ggplot}} function from "ggplot2" package. The default is an empty list.}
}
\value{
A static image or an interactive application lauched on the web browser.
}
\description{
This function displays the input gene in the context of corresponding gene network module, where the rows and columns are sorted by hierarchical clustering dendrograms and the row of input gene is tagged by two lines. The matrix heatmap can be dispalyed in static or a web-browser based interactive mode. If the latter, users can zoom in and out by drawing a rectangle and by double clicking the image, respectively. Users can scale the data matrix by gene or sample. The same module can also be displayed in form of a network through the \code{\link{network}} function.
}
\examples{
# The example data (E-GEOD-67196) is an RNA-seq data measured in cerebellum and frontal cortex of human brain across normal and amyotrophic lateral sclerosis (ALS) subjects (Prudencio et al. 2015). 
library(ExpressionAtlas); library(SummarizedExperiment)
rse.hum <- getAtlasData('E-GEOD-67196')[[1]][[1]]; assay(rse.hum)[1:3, 1:3]

# A targets file describing replicates of samples and conditions is required, which is made based on the "colData" slot in the downloaded "RangedSummarizedExperiment" and available in spatialHeatmap. See the "se" parameter for details. 
brain.pa <- system.file('extdata/shinyApp/example/target_brain.txt', package='spatialHeatmap')
target.hum <- read.table(brain.pa, header=TRUE, row.names=1, sep='\t')
# The "organism_part" and "disease" column describes tissue and condition replicates respectively.  
target.hum[c(1:3, 41:42), 4:5]
# Place the targets file into "colData" slot as a DataFrame class. 
colData(rse.hum) <- DataFrame(target.hum)

# For users with little R expertise, if the gene expression matrix comes as a data frame, it should be placed into "SummarizedExperiment" before proceeding to next step. An example is shown below by borrowing a data matrix from the brain data.
# Borrow a data matrix.
df <- assay(rse.hum); df[1:2, 1:3]
# Place the data matrix and targets file (target.hum) into "SummarizedExperiment".
rse.hum <- SummarizedExperiment(assay=df, colData=target.hum, rowData=NULL)

# The count matrix is normalised with estimateSizeFactors (type=‘ratio’).
se.nor.hum <- norm_data(se=rse.hum, method.norm='ratio', data.trans='log2')

# Average replicates of concatenated sample__condition.
se.aggr.hum <- aggr_rep(se=se.nor.hum, sam.factor='organism_part', con.factor='disease', aggr='mean')
assay(se.aggr.hum)[49939:49942, ] # The concatenated tissue__conditions are the column names of the output data matrix.

# Genes with low expression level and low variantion are always filtered. 
se.fil.hum <- filter_data(se=se.aggr.hum, sam.factor='organism_part', con.factor='disease', pOA=c(0.01, 5), CV=c(0.3, 100), dir=NULL)
# Detect modules. 
adj.mod <- adj_mod(se=se.fil.hum, type="signed", minSize=15, dir=NULL)
# The first column is ds=2 while the second is ds=3. The numbers in each column are module labels with "0" meaning genes not assigned to any modules.
adj.mod[['mod']][1:3, ]
# Plot matrix heatmap on gene ENSG00000008196 with ds='3'. Set "static=TRUE" to launch the interactive mode. 
matrix_hm(geneID="ENSG00000008196", se=se.fil.hum, adj.mod=adj.mod, ds="3", scale="no", angleCol=80, angleRow=35, cexRow=0.8, cexCol=0.8, margin=c(10, 6), static=TRUE, arg.lis1=list(offsetRow=0.1, offsetCol=0.1))
}
\references{
Martin Morgan, Valerie Obenchain, Jim Hester and Hervé Pagès (2018). SummarizedExperiment: SummarizedExperiment container. R package version 1.10.1 \cr Andrie de Vries and Brian D. Ripley (2016). ggdendro: Create Dendrograms and Tree Diagrams Using 'ggplot2'. R package version 0.1-20. https://CRAN.R-project.org/package=ggdendro \cr H. Wickham. ggplot2: Elegant Graphics for Data Analysis. Springer-Verlag New York, 2016. \cr Carson Sievert (2018) plotly for R. https://plotly-book.cpsievert.me \cr Langfelder P and Horvath S, WGCNA: an R package for weighted correlation network analysis. BMC Bioinformatics 2008, 9:559 doi:10.1186/1471-2105-9-559 \cr R Core Team (2018). R: A language and environment for statistical computing. R Foundation for Statistical Computing, Vienna, Austria. URL https://www.R-project.org/ \cr Gregory R. Warnes, Ben Bolker, Lodewijk Bonebakker, Robert Gentleman, Wolfgang Huber Andy Liaw, Thomas Lumley, Martin Maechler, Arni Magnusson, Steffen Moeller, Marc Schwartz and Bill Venables (2019). gplots: Various R Programming Tools for Plotting Data. R package version 3.0.1.1.  https://CRAN.R-project.org/package=gplots \cr Hadley Wickham (2007). Reshaping Data with the reshape Package. Journal of Statistical Software, 21(12), 1-20. URL http://www.jstatsoft.org/v21/i12/ 
Prudencio, Mercedes, Veronique V Belzil, Ranjan Batra, Christian A Ross, Tania F Gendron, Luc J Pregent, Melissa E Murray, et al. 2015. "Distinct Brain Transcriptome Profiles in C9orf72-Associated and Sporadic ALS. Nat. Neurosci. 18 (8): 1175–82
Keays, Maria. 2019. ExpressionAtlas: Download Datasets from EMBL-EBI Expression Atlas
Love, Michael I., Wolfgang Huber, and Simon Anders. 2014. "Moderated Estimation of Fold Change and Dispersion for RNA-Seq Data with DESeq2." Genome Biology 15 (12): 550. doi:10.1186/s13059-014-0550-8
}
\author{
Jianhai Zhang \email{jzhan067@ucr.edu; zhang.jianhai@hotmail.com} \cr Dr. Thomas Girke \email{thomas.girke@ucr.edu}
}
