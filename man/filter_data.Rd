% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/filter_data.R
\name{filter_data}
\alias{filter_data}
\title{Filter the Data Matrix}
\usage{
filter_data(
  data,
  pOA = c(0, 0),
  CV = c(-Inf, Inf),
  ann = NULL,
  samples,
  conditions,
  dir = NULL
)
}
\arguments{
\item{data}{A "SummarizedExperiment" storing a gene expression matrix and metadata. The "assays" slot stores a expression matrix with row and column names being gene IDs and sample/conditions, respectively. The "rowData" is optional. It can store a data frame with a column being row (gene) anntation. \cr The "colData" slot contains a data frame with a column being sample (tissue) and a column being condition. The 2 columns are ultimately concatenated by double underscore "__" to replace the original column names in the expression matrix. Thus the syntax of the column names in the final expression matrix is sample__condition. E.g. "stele__140mM_48h" (Geng et al. 2013), where stele is the sample and 140mM_48h is the condition. In the 2 column names of sample and condition in "colData", only letters, digits, single underscore, dots, single space are allowed. Not all samples in the expression matrix need to be present in the SVG image, and vice versa. Only samples identical between the matrix and the SVG image are recognised and coloured in the spatial heatmap. If the original column names in the expression matrix are already formatted as sample__condition, "samples" and "conditions" input can be NULL.}

\item{pOA}{It specifies parameters of the filter function "pOverA" from the package "genefilter" (Gentleman et al. 2018). It filters genes according to the proportion "p" of samples where the expression values exceed a threshold "A". The input is a vector of two numbers, where the first one is the "p" and the second one is "A". The default is c(0, 0), which means no filter is applied. \cr E.g. c(0.1, 2) means genes whose expression values over 2 in at least 10\% of all samples are kept.}

\item{CV}{It specifies parameters of the filter function "cv" from the package "genefilter" (Gentleman et al. 2018), which filters genes according to the coefficient of variation (CV). The input is a vector of two numbers, specifying the CV range. The default is c(-Inf, Inf), where the range is set from -Inf to Inf so as not to apply filtering. \cr E.g. c(0.1, 5) means genes with CV between 0.1 and 5 are kept.}

\item{ann}{A character. The column name corresponding to row (gene) annotation in the "rowData" of "data" argument. The default is NULL.}

\item{samples}{A character. The column name corresponding to tissues in the "colData" of "data" argument. Can be NULL if column names of expression matrix in "data" argument are already formatted as sample__condition.}

\item{conditions}{A character. The column name corresponding to conditions in the "colData" of "data" argument. Can be NULL if column names of expression matrix in "data" argument are already formatted as sample__condition.}

\item{dir}{The path where the directory "local_mode_result/" is created automatically to save the processed data matrix "processed_data.txt". In the "processed_data.txt", the rows and columns are genes and sample/conditions respectively and the last column is annotation of genes. This argument should be the same with that from the function "adj.mod" so that the files "adj.txt" and "mod.txt" generated by "adj.mod" are saved in the same directory. The default is NULL.}
}
\value{
A "SummarizedExperiment" object containing filtered expression matrix and metadata. The column names of the expression matrix are formatted as sample__condition. If "dir" is not NULL, the filtered expression matrix is saved in a "\\t" separated "txt" file (processed_data.txt).
}
\description{
It is designed to filter the gene expression matrix. The filtering is based on two functions "pOverA" and "cv" from the package "genefilter"(Gentleman et al. 2018). \cr When using the web-browser based integreted spatialHeatmap, the expression matrix can optionally be first processed with this function, saved locally, then uploaded to "Step 2: upload a gene expression file".
}
\examples{
# Creat the "SummarizedExperiment" class. Refer to the R package "SummarizedExperiment" for more details.
data.path <- system.file("extdata/shinyApp/example", "root_expr_row_gen.txt", package = "spatialHeatmap")   
## The expression matrix, where the row and column names should be gene IDs and sample/conditions respectively. This data matrix is truncated from a GEO dataset (https://www.ncbi.nlm.nih.gov/geo/query/acc.cgi?acc=GSE46205), which is already normalised.
library(data.table); expr <- fread(data.path, sep='\t', header=TRUE, fill=TRUE)
col.na <- colnames(expr)[-ncol(expr)]; row.na <- as.data.frame(expr[, 1])[, 1]
expr <- as.matrix(as.data.frame(expr, stringsAsFactors=FALSE)[, -1])
rownames(expr) <- row.na; colnames(expr) <- col.na
col.met.path <- system.file("extdata/shinyApp/example", "col_metadata.txt", package = "spatialHeatmap") 
## Condition metadata is data frame. It has a column of tissues and a column of contidions, which correspond to columns of the data matrix "expr".
col.metadata <- read.table(col.met.path, header=TRUE, row.names=NULL, sep='\t', stringsAsFactors=FALSE)
row.met.path <- system.file("extdata/shinyApp/example", "row_metadata.txt", package = "spatialHeatmap")
## Row metadata is a data frame. It has a column of row (gene) annotations, which correspond to rows of the data matrix "expr".
row.metadata <- read.table(row.met.path, header=TRUE, row.names=1, sep='\t', stringsAsFactors=FALSE)
## The expression matrix, row metadata, and column metadata are stored in a "SummarizedExperiment" object. The row metadata is optional while column metadata is mandatory. The column names in the expression matrix are not important, since they are ultimately renewed by column metadata.
library(SummarizedExperiment); expr <- as.matrix(expr); se <- SummarizedExperiment(assays=list(expr=expr), rowData=row.metadata, colData=col.metadata)  
exp <- filter_data(data=se, pOA=c(0, 0), CV=c(0.1, Inf), ann='ann', samples='sample', conditions='condition', dir=NULL) 
}
\references{
Gentleman, R, V Carey, W Huber, and F Hahne. 2018. “Genefilter: Methods for Filtering Genes from High-Throughput Experiments.” http://bioconductor.uib.no/2.7/bioc/html/genefilter.html \cr Matt Dowle and Arun Srinivasan (2017). data.table: Extension of `data.frame`. R package version 1.10.4. https://CRAN.R-project.org/package=data.table \cr Martin Morgan, Valerie Obenchain, Jim Hester and Hervé Pagès (2018). SummarizedExperiment: SummarizedExperiment container. R package version 1.10.1 \cr R Core Team (2018). R: A language and environment for statistical computing. R Foundation for Statistical Computing, Vienna, Austria. URL https://www.R-project.org/
Geng Y, Wu R, Wee CW, Xie F et al. A spatio-temporal understanding of growth regulation during the salt stress response in Arabidopsis. Plant Cell 2013 Jun;25(6):2132-54. PMID: 23898029
}
\author{
Jianhai Zhang \email{jzhan067@ucr.edu; zhang.jianhai@hotmail.com} \cr Dr. Thomas Girke \email{thomas.girke@ucr.edu}
}
