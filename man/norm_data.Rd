% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/norm_data.R
\name{norm_data}
\alias{norm_data}
\title{Normalise Sequencing Count Matrix
This function normalise count matrix from sequencing. It inputs the count matrix and sample metadata in form of "SummarizedExperiment". In "colData" slot, at least "sample" and "condition" information should be included.}
\usage{
norm_data(
  se,
  method.norm = "TMM",
  fitType = "parametric",
  blind = TRUE,
  data.trans = "none"
)
}
\arguments{
\item{se}{A "SummarizedExperiment" storing a gene expression matrix and metadata. The "assays" slot stores a expression matrix with row and column names being gene IDs and sample/conditions, respectively. The "rowData" can store a data frame of row (gene) anntation, but is optional. \cr The "colData" slot is required and contains a data frame with at least 2 columns corresponding to replicates of samples and conditions respectively. It is important that only letters, digits, single underscore, dots, single space are allowed in the 2 columns.}

\item{method.norm}{A character of the normalisation methods. Options are "TMM", "TMMwsp", "RLE", "upperquartile" in \code{\link[edgeR]{calcNormFactors}} from edgeR (McCarthy et al. 2012), and "ratio" (i.e. "type" in \code{\link[DESeq2]{estimateSizeFactors}}), "iterate" (i.e. "type" in \code{\link[DESeq2]{estimateSizeFactors}}), "VST" (i.e. \code{\link[DESeq2]{varianceStabilizingTransformation}}), "\code{\link[DESeq2]{rlog}}" from DESeq2 (Love, Huber, and Anders 2014). If "none", no normalisation is applied. Default is "TMM".}

\item{fitType}{either "parametric", "local", or "mean"
for the type of fitting of dispersions to the mean intensity.
\itemize{
  \item parametric - fit a dispersion-mean relation of the form:
    \deqn{dispersion = asymptDisp + extraPois / mean}
    via a robust gamma-family GLM. The coefficients \code{asymptDisp} and \code{extraPois}
    are given in the attribute \code{coefficients} of the \code{\link[DESeq2]{dispersionFunction}}
    of the object.
  \item local - use the locfit package to fit a local regression
    of log dispersions over log base mean (normal scale means and dispersions
    are input and output for \code{\link[DESeq2]{dispersionFunction}}). The points
    are weighted by normalized mean count in the local regression.
  \item mean - use the mean of gene-wise dispersion estimates.
}}

\item{data.trans}{One of "log2", "exp2", and "none", corresponding to transform the count matrix by log2, 2-based exponent, and no transformation respecitvely. Default is "none".}

\item{rep.aggr}{One of "mean", "median", and "none", methods of aggregating the replicates. Default is "mean". If "none", replicates are not aggregated.}
}
\value{
A "SummarizedExperiment" object containing normalised data matrix and metadata. The column names of the expression matrix are formatted as "sample__condition".
}
\description{
Normalise Sequencing Count Matrix
This function normalise count matrix from sequencing. It inputs the count matrix and sample metadata in form of "SummarizedExperiment". In "colData" slot, at least "sample" and "condition" information should be included.
}
\examples{
# The example data (E-GEOD-67196) is an RNA-seq data measured in cerebellum and frontal cortex of human brain across normal and amyotrophic lateral sclerosis (ALS) subjects (Prudencio et al. 2015). 
library(ExpressionAtlas)
rse.hum <- getAtlasData('E-GEOD-67196')[[1]][[1]]; assay(rse.hum)[1:3, 1:3]

# A targets file describing replicates of samples and conditions is required, which should be made based on the "colData" slot in "RangedSummarizedExperiment". See the "se" parameter for details. This targets file is available in spatialHeatmap.
brain.pa <- system.file('extdata/example_data/target_brain.txt', package='spatialHeatmap')
target.hum <- read.table(brain.pa, header=TRUE, row.names=1, sep='\t')
# The "organism_part" and "disease" column describes tissue and condition replicates respectively. Note that the replicates of the same tissue or condition should have the identical name.
target.hum[c(1:3, 41:42), 4:5]
# Place the targets file into "colData" slot. 
colData(rse.hum) <- DataFrame(target.hum)

# For users with little R expertise, if the gene expression matrix comes as a data frame, it should be placed into "SummarizedExperiment" before proceeding to next step. An example is shown below by borrowing a data frame from the brain data.
# Borrow a data matrix.
df <- assays(rse.hum)[[1]]; df[1:2, 1:3]
# Place the data matrix and targets file (target.hum) into "SummarizedExperiment".
rse.hum <- SummarizedExperiment(assays=list(counts=df), colData=target.hum, rowData=NULL)

# The count matrix is normalised with estimateSizeFactors (type=‘ratio’).
se.nor.hum <- norm_data(se=rse.hum, method.norm='ratio', data.trans='log2')
}
\references{
SummarizedExperiment: SummarizedExperiment container. R package version 1.10.1 \cr R Core Team (2018). R: A language and environment for statistical computing. R Foundation for Statistical Computing, Vienna, Austria. URL https://www.R-project.org/
Love, Michael I., Wolfgang Huber, and Simon Anders. 2014. “Moderated Estimation of Fold Change and Dispersion for RNA-Seq Data with DESeq2.” Genome Biology 15 (12): 550. doi:10.1186/s13059-014-0550-8
McCarthy, Davis J., Chen, Yunshun, Smyth, and Gordon K. 2012. “Differential Expression Analysis of Multifactor RNA-Seq Experiments with Respect to Biological Variation.” Nucleic Acids Research 40 (10): 4288–97
Prudencio, Mercedes, Veronique V Belzil, Ranjan Batra, Christian A Ross, Tania F Gendron, Luc J Pregent, Melissa E Murray, et al. 2015. “Distinct Brain Transcriptome Profiles in C9orf72-Associated and Sporadic ALS.” Nat. Neurosci. 18 (8): 1175–82
Keays, Maria. 2019. ExpressionAtlas: Download Datasets from EMBL-EBI Expression Atlas
}
\seealso{
\code{\link[edgeR]{calcNormFactors}} in edgeR, and \code{\link[DESeq2]{estimateSizeFactors}}, \code{\link[DESeq2]{varianceStabilizingTransformation}}, \code{\link[DESeq2]{rlog}} in DESeq2.
}
\author{
Jianhai Zhang \email{jzhan067@ucr.edu; zhang.jianhai@hotmail.com} \cr Dr. Thomas Girke \email{thomas.girke@ucr.edu}
}
